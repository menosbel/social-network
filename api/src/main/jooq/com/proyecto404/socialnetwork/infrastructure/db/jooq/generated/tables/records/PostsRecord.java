/*
 * This file is generated by jOOQ.
 */
package com.proyecto404.socialnetwork.infrastructure.db.jooq.generated.tables.records;


import com.proyecto404.socialnetwork.infrastructure.db.jooq.generated.tables.Posts;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsRecord extends UpdatableRecordImpl<PostsRecord> implements Record4<Integer, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.posts.id</code>.
     */
    public PostsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.posts.message</code>.
     */
    public PostsRecord setMessage(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.message</code>.
     */
    public String getMessage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.posts.userid</code>.
     */
    public PostsRecord setUserid(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.userid</code>.
     */
    public Integer getUserid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.posts.createdat</code>.
     */
    public PostsRecord setCreatedat(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.posts.createdat</code>.
     */
    public String getCreatedat() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Posts.POSTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Posts.POSTS.MESSAGE;
    }

    @Override
    public Field<Integer> field3() {
        return Posts.POSTS.USERID;
    }

    @Override
    public Field<String> field4() {
        return Posts.POSTS.CREATEDAT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMessage();
    }

    @Override
    public Integer component3() {
        return getUserid();
    }

    @Override
    public String component4() {
        return getCreatedat();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMessage();
    }

    @Override
    public Integer value3() {
        return getUserid();
    }

    @Override
    public String value4() {
        return getCreatedat();
    }

    @Override
    public PostsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PostsRecord value2(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public PostsRecord value3(Integer value) {
        setUserid(value);
        return this;
    }

    @Override
    public PostsRecord value4(String value) {
        setCreatedat(value);
        return this;
    }

    @Override
    public PostsRecord values(Integer value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostsRecord
     */
    public PostsRecord() {
        super(Posts.POSTS);
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(Integer id, String message, Integer userid, String createdat) {
        super(Posts.POSTS);

        setId(id);
        setMessage(message);
        setUserid(userid);
        setCreatedat(createdat);
    }
}
